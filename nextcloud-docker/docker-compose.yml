volumes:
  nextcloud:
  nextcloud2:
  db:
  db2:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:

x-minio-common: &minio-common
  image: quay.io/minio/minio:latest
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
  environment:
    - MINIO_ROOT_USER=minioadmin
    - MINIO_ROOT_PASSWORD=minioadmin

  healthcheck:
    test: ["CMD", "mc", "ready", "local"]
    interval: 5s
    timeout: 5s
    retries: 5

services:

  haproxy-alpine:
      container_name: haproxy
      networks:
          - sciencemesh-federation
      volumes:
          - ./haproxy:/usr/local/etc/haproxy:ro
      ports:
          - 80:80
          - 8404:8404
      image: haproxytech/haproxy-alpine:2.4

  nextcloud-app:
    container_name: nextcloud-local
    image: nextcloud:30
    restart: always
    # expose:
    #   - 8080:80
    #   - "8080"
    #   - "8443"
    ports:
      - 8443:8443
      - 8080:80
      - 80:80
    links:
      - db1
      - collabora-server
    volumes:
      - nextcloud:/var/www/html

      - type: bind
        source: /tmp/nextcloud-ssl.conf
        target: /etc/apache2/mods-enabled/nextcloud.conf
      - type: bind
        source: /tmp/nextcloud-8443.conf
        target: /etc/apache2/sites-enabled/nextcloud.conf
      - type: bind
        source: /tmp/localhost.pem
        target: /etc/ssl/private/localhost.pem
    environment:
      - MYSQL_PASSWORD=userpass
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_HOST=db
    networks:
      - sciencemesh-federation

  nextcloud-app2:
    container_name: nextcloud-local2
    image: nextcloud:30
    restart: always
    # expose:
    #   - 8080:80
    #   - "8080"
    #   - "8443"
    ports:
      - 7443:8443
      - 7080:80
      # - 80:80
    links:
      - db2
      - collabora-server
    volumes:
      - nextcloud2:/var/www/html

      - type: bind
        source: /tmp/nextcloud-ssl.conf
        target: /etc/apache2/mods-enabled/nextcloud.conf
      - type: bind
        source: /tmp/nextcloud-8443.conf
        target: /etc/apache2/sites-enabled/nextcloud.conf
      - type: bind
        source: /tmp/localhost.pem
        target: /etc/ssl/private/localhost.pem
    environment:
      - MYSQL_PASSWORD=userpass
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_HOST=db
    networks:
      - sciencemesh-federation

  db1:
    container_name: nextcloud-local-db
    image: mariadb:latest
    restart: always
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    volumes:
      - db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=rootpass
      - MYSQL_PASSWORD=userpass
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
    networks:
      - sciencemesh-federation

  db2:
    container_name: nextcloud-local-db2
    image: mariadb:latest
    restart: always
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    volumes:
      - db2:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=rootpass
      - MYSQL_PASSWORD=userpass
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
    networks:
      - sciencemesh-federation

  collabora-server:
    image: collabora/code:latest
    container_name: collabora-server
    restart: always
    # expose:
    #   - "9980"
    ports:
      - 9980:9980
    environment:
      # https://sdk.collaboraonline.com/docs/installation/CODE_Docker_image.html
      # - aliasgroup1=${NEXTCLOUD1}
      # - aliasgroup2=${NEXTCLOUD2}
      # - aliasgroup3=${NEXTCLOUD3}
      - dictionaries=de_DE en_US es_ES ru
      - VIRTUAL_PROTO=http
      - VIRTUAL_PORT=9980
      - VIRTUAL_HOST=collabora
      - extra_params=--o:ssl.enable=false --o:ssl.termination=true --o:user_interface.mode=compact --o:net.proto=IPv4 --o:hexify_embedded_urls=true --o:logging.level=warning
      - username=admin
      - password=adminpassword
    networks:
      - sciencemesh-federation

  whiteboard-server:
    container_name: nextcloud-local-whiteboard
    image: ghcr.io/nextcloud-releases/whiteboard:release
    ports:
      - 3002:3002
    environment:
      - NEXTCLOUD_URL=https://localhost
      - JWT_SECRET_KEY=some-random-key
    networks:
      - sciencemesh-federation

  jupyterhub:
    container_name: nextcloud-local-jupyterhub
    ports:
        - 8100:8000
        - 8081:8081
        - 8082:8082
    image: jupyterhub-local
    environment:
      - HUB_SERVICE_HOST=nextcloud-local-jupyterhub
      - HUB_SERVICE_PORT_REFRESH_TOKEN=8082
      - NEXTCLOUD_HOST=nextcloud-local
      - NEXTCLOUD_CLIENT_ID=AdHJg6nsDeNdYGYxHfisUojXHYw7YBx4SR7DjRWIB8E9FFdfwky21tO7pD9uJ6sV
      - NEXTCLOUD_CLIENT_SECRET=9belLuRY4h12UsHWMO6kO3IhH01EiLeueNprnTe1PyhxKiMW6vnKfKAQpzJ3qUbT
      - JUPYTERHUB_CRYPT_KEY=4195e318e435326c21739c3b398d841592c780e824320f1729be43ff56b15681
      - JUPYTER_HOST=nextcloud-local-jupyterhub
      - JUPYTER_PORT=9444
      - JUPYTERHUB_API_KEY=randomapikey
      - JUPYTERHUB_SERVICE_URL=http://nextcloud-local-jupyterhub:8100
      # Prepare for DockerSpawner
      # This username will be a JupyterHub admin
      - JUPYTERHUB_ADMIN=admin
      # All containers will join this network
      - DOCKER_NETWORK_NAME=jupyterhub-network
      # JupyterHub will spawn this Notebook image for users
      # - DOCKER_NOTEBOOK_IMAGE=quay.io/jupyter/base-notebook:latest
      - DOCKER_NOTEBOOK_IMAGE=jupyterhub-local
      # Notebook directory inside user image
      - DOCKER_NOTEBOOK_DIR=/home/jovyan/work
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - sciencemesh-federation

  mock-oauth2-server:
    container_name: nextcloud-local-mock-oauth
    image: ghcr.io/navikt/mock-oauth2-server:2.1.1
    stdin_open: true
    tty: true
    ports:
        - 8880:8880
    environment:
      - SERVER_PORT=8880
    networks:
      - sciencemesh-federation

  minio1:
    <<: *minio-common
    container_name: nextcloud-local-minio1
    hostname: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2
    networks:
      - sciencemesh-federation

  minio2:
    <<: *minio-common
    container_name: nextcloud-local-minio2
    hostname: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2
    networks:
      - sciencemesh-federation

  minio3:
    <<: *minio-common
    container_name: nextcloud-local-minio3
    hostname: minio3
    volumes:
      - data3-1:/data1
      - data3-2:/data2
    networks:
      - sciencemesh-federation

  minio4:
    <<: *minio-common
    container_name: nextcloud-local-minio4
    hostname: minio4
    volumes:
      - data4-1:/data1
      - data4-2:/data2
    networks:
      - sciencemesh-federation

  nginx:
    container_name: nextcloud-local-minio
    image: nginx:latest
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4
    networks:
      - sciencemesh-federation

networks:
  sciencemesh-federation:
    name: sciencemesh-federation